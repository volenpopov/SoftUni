- PROBLEM 1

SELECT FirstName, LastName
FROM Employees
WHERE LEFT(FirstName, 2) = 'SA'

SELECT FirstName, LastName
FROM Employees
WHERE SUBSTRING(FirstName, 1, 2) = 'SA'

- PROBLEM 2

SELECT FirstName, LastName
FROM Employees
WHERE CHARINDEX('ei', LastName) > 0

SELECT FirstName, LastName
FROM Employees
WHERE LastName LIKE '%ei%';

- PROBLEM 3

SELECT FirstName
FROM Employees
WHERE DepartmentID IN (3, 10) 
AND HireDate BETWEEN '1995/01/01' AND '2005/12/31'

- PROBLEM 4

SELECT FirstName, LastName
FROM Employees
WHERE NOT (JobTitle LIKE '%engineer%')

- PROBLEM 5

SELECT Name
FROM Towns
WHERE LEN(Name) = 5 OR LEN(NAME) = 6
ORDER BY Name

- PROBLEM 6

SELECT TownID, Name
FROM Towns
WHERE LEFT(Name, 1) = 'M' OR LEFT(Name, 1) = 'K' OR LEFT(Name, 1) = 'B' OR LEFT(Name, 1) = 'E'
ORDER BY Name

- PROBLEM 7

SELECT TownID, Name
FROM Towns
WHERE NOT (LEFT(Name, 1) = 'R' OR LEFT(Name, 1) = 'B' OR LEFT(Name, 1) = 'D')
ORDER BY Name

 - PROBLEM 8

CREATE VIEW V_EmployeesHiredAfter2000 AS
SELECT FirstName, LastName
FROM Employees
WHERE HireDate > '2000/12/31'

- PROBLEM 9

SELECT FirstName, LastName
FROM Employees
WHERE LEN(LastName) = 5

 - PROBLEM 10

SELECT EmployeeID, FirstName, LastName, Salary, 
	DENSE_RANK () OVER (PARTITION BY Salary ORDER BY EmployeeID) AS [Rank]
FROM Employees
WHERE Salary BETWEEN 10000 AND 50000
ORDER BY Salary DESC

- PROBLEM 11

SELECT *
FROM (
	SELECT EmployeeID, FirstName, LastName, Salary, 
		DENSE_RANK () OVER (PARTITION BY Salary ORDER BY EmployeeID) AS [Rank]
	FROM Employees
	WHERE Salary BETWEEN 10000 AND 50000	
) emp
WHERE emp.Rank = 2
ORDER BY Salary DESC

- PROBLEM 12

SELECT CountryName, IsoCode
FROM Countries
WHERE CountryName LIKE '%a%a%a%'
ORDER BY IsoCode

SELECT CountryName, IsoCode
FROM Countries
WHERE LEN(CountryName) - LEN(REPLACE(CountryName, 'a', '')) >= 3
ORDER BY IsoCode

- PROBLEM 13

SELECT PeakName, RiverName,
	CONCAT(LOWER(PeakName), SUBSTRING(LOWER(RiverName), 2, LEN(RiverName) - 1)) AS [Mix]
FROM Peaks, Rivers
WHERE RIGHT(PeakName, 1) = LEFT(RiverName, 1)
ORDER BY Mix

- PROBLEM 14

SELECT TOP (50) Name, FORMAT(CAST(Start AS DATE), 'yyyy-MM-dd') AS [Start]
FROM Games
WHERE Start BETWEEN '2011/01/01' AND '2012/12/31'
ORDER BY Start, Name

SELECT TOP (50) Name, FORMAT(CAST(Start AS DATE), 'yyyy-MM-dd') AS [Start]
FROM Games
WHERE DATEPART(YEAR, Start) BETWEEN 2011 AND 2012
ORDER BY Start, Name

- PROBLEM 15

SELECT Username,
	   SUBSTRING(Email, CHARINDEX('@', Email) + 1, LEN(Email)) AS [Email Provider]
FROM Users
ORDER BY [Email Provider], Username

- PROBLEM 16

SELECT Username, 
	IpAddress AS [IP Address]
FROM Users
WHERE IpAddress LIKE '___.1%.%.___'
ORDER BY Username

- PROBLEM 17

SELECT Name AS [Game],
	CASE
		WHEN DATEPART(HOUR, Start) BETWEEN 0 AND 11 THEN 'Morning'
		WHEN DATEPART(HOUR, Start) BETWEEN 12 AND 17 THEN 'Afternoon'
		WHEN DATEPART(HOUR, Start) BETWEEN 18 AND 24 THEN 'Evening'
	END AS [Part of the Day],
	
	CASE
		WHEN Duration <= 3 THEN 'Extra Short'
		WHEN Duration BETWEEN 4 AND 6 THEN 'Short'
		WHEN Duration > 6 THEN 'Long'
		WHEN Duration IS NULL THEN 'Extra Long'
	END AS [Duration]
FROM Games
ORDER BY Game, Duration

- PROBLEM 18

SELECT ProductName,
	OrderDate,
	DATEADD(DAY, 3, OrderDate) AS [Pay Due],
	DATEADD(MONTH, 1, OrderDate) AS [Deliver Due]
FROM Orders

- PROBLEM 19

SELECT Name,
	DATEPART(YEAR, GETDATE()) - DATEPART(YEAR, Birthdate) AS [Age in Years],
	DATEDIFF(MONTH, Birthdate, GETDATE()) AS [Age in Months],
	DATEDIFF(DAY, Birthdate, GETDATE()) AS [Age in Days],
	DATEDIFF(MINUTE, Birthdate, GETDATE()) AS [Age in Minutes]
FROM People