- PROBLEM 1

CREATE TABLE Passports (
	PassportID INT PRIMARY KEY
	, PassportNumber NVARCHAR(50) NOT NULL
)

CREATE TABLE Persons (
	PersonID INT PRIMARY KEY IDENTITY
	, FirstName NVARCHAR(30) NOT NULL
	, Salary DECIMAL(15, 2)
	, PassportID INT FOREIGN KEY REFERENCES Passports(PassportID)
)

INSERT INTO Passports VALUES
(101, 'N34FG21B'),
(102, 'K65LO4R7'),
(103, 'ZE657QP2')

INSERT INTO Persons (FirstName, Salary, PassportID) VALUES
('Roberto', 43300.00, 102),
('Tom', 56100.00, 103),
('Yana', 60200.00, 101)

-----------------------------

CREATE TABLE Passports (
	PassportID INT PRIMARY KEY
	, PassportNumber NVARCHAR(50) NOT NULL
)

CREATE TABLE Persons (
	PersonID INT PRIMARY KEY IDENTITY
	, FirstName NVARCHAR(30) NOT NULL
	, Salary DECIMAL(15, 2)
	, PassportID INT
)

ALTER TABLE Persons
	ADD CONSTRAINT FK_PersonPassport
	FOREIGN KEY (PassportID)
	REFERENCES Passports(PassportID)

INSERT INTO Passports VALUES
(101, 'N34FG21B'),
(102, 'K65LO4R7'),
(103, 'ZE657QP2')

INSERT INTO Persons (FirstName, Salary, PassportID) VALUES
('Roberto', 43300.00, 102),
('Tom', 56100.00, 103),
('Yana', 60200.00, 101)


- PROBLEM 2


CREATE TABLE Manufacturers (
	ManufacturerID INT PRIMARY KEY IDENTITY
	, [Name] NVARCHAR(50) NOT NULL
	, EstablishedOn DATE
)

CREATE TABLE Models (
	ModelID INT PRIMARY KEY
	, [Name] NVARCHAR(50) NOT NULL
	, ManufacturerID INT NOT NULL
)

ALTER TABLE Models
	ADD CONSTRAINT FK_ModelManufacturer
	FOREIGN KEY (ManufacturerID)
	REFERENCES Manufacturers(ManufacturerID)

INSERT INTO Manufacturers (Name, EstablishedOn) VALUES
('BMW', '07/03/1916'),
('Tesla', '01/01/2003'),
('Lada', '01/05/1966')

INSERT INTO Models (ModelID, Name, ManufacturerID) VALUES
(101, 'X1', 1),
(102, 'i6', 1),
(103, 'Model S', 2),
(104, 'Model X', 2),
(105, 'Model 3', 2),
(106, 'Nova', 3)


- PROBLEM 3

CREATE TABLE Students (
	StudentID INT PRIMARY KEY IDENTITY
	, Name NVARCHAR(50) NOT NULL
)

CREATE TABLE Exams (
	ExamID INT PRIMARY KEY
	, Name NVARCHAR(50) NOT NULL 
)

CREATE TABLE StudentsExams (
	StudentID INT NOT NULL
	, ExamID INT NOT NULL

	, CONSTRAINT FK_StudentIDStudent FOREIGN KEY (StudentID) REFERENCES Students(StudentID)
	, CONSTRAINT FK_ExamIDExam FOREIGN KEY (ExamID) REFERENCES Exams(ExamID),

	CONSTRAINT PK_StudentExam PRIMARY KEY (StudentID, ExamID)
)

INSERT INTO Students (Name) VALUES
('Mila'),
('Toni'),
('Ron')	

INSERT INTO Exams (ExamID ,Name) VALUES
(101, 'SpringMVC'),
(102, 'Neo4j'),
(103, 'Oracle 11g')

INSERT INTO StudentsExams (StudentID, ExamID) VALUES
(1, 101),
(1, 102),
(2, 101),
(3, 103),
(2, 102),
(2, 103)


- PROBLEM 4


CREATE TABLE Teachers (
	TeacherID INT PRIMARY KEY
	, Name NVARCHAR(50)
	, ManagerID INT 
)

INSERT INTO Teachers (TeacherID, Name, ManagerID) VALUES
(101, 'John', NULL),
(102, 'Maya', 106),
(103, 'Silvia', 106),
(104, 'Ted', 105),
(105, 'Clark', 101),
(106, 'Greta', 101)


ALTER TABLE Teachers
ADD CONSTRAINT FK_ManagerTeacher 
	FOREIGN KEY (ManagerID) 
	REFERENCES Teachers(TeacherID)



- PROBLEM 5


CREATE TABLE Cities (
	CityID INT PRIMARY KEY
	, Name VARCHAR(50)
)

CREATE TABLE Customers (
	CustomerID INT PRIMARY KEY
	, Name VARCHAR(50)
	, Birthday DATE
	, CityID INT FOREIGN KEY REFERENCES Cities(CityID)
)

CREATE TABLE Orders (
	OrderID INT PRIMARY KEY
	, CustomerID INT FOREIGN KEY REFERENCES Customers(CustomerID)
)

CREATE TABLE ItemTypes (
	ItemTypeID INT PRIMARY KEY
	, Name VARCHAR(50)
)

CREATE TABLE Items (
	ItemID INT PRIMARY KEY
	, Name VARCHAR(50)
	, ItemTypeID INT FOREIGN KEY REFERENCES ItemTypes(ItemTypeID)
)

CREATE TABLE OrderItems (
	OrderID INT NOT NULL
	, ItemID INT NOT NULL

	, CONSTRAINT FK_OrderIDOrders FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
	, CONSTRAINT FK_ItemIDItems FOREIGN KEY (ItemID) REFERENCES Items(ItemID)

	, CONSTRAINT PK_OrderItem PRIMARY KEY (OrderID, ItemID)
)


- PROBLEM 6

CREATE TABLE Subjects (
	SubjectID INT PRIMARY KEY
	, SubjectName VARCHAR(50)
)

CREATE TABLE Majors (
	MajorID INT PRIMARY KEY
	, Name VARCHAR(50)
)

CREATE TABLE Students (
	StudentID INT PRIMARY KEY
	, StudentNumber VARCHAR(50)
	, StudentName VARCHAR(50)
	, MajorID INT

	, CONSTRAINT FK_StudentsToMajorsByMajorID FOREIGN KEY (MajorID) REFERENCES Majors(MajorID)
)

CREATE TABLE Agenda (
	StudentID INT NOT NULL
	, SubjectID INT NOT NULL

	, CONSTRAINT FK_StudentIDStudent FOREIGN KEY (StudentID) REFERENCES Students(StudentID)
	, CONSTRAINT FK_SubjectIDSubject FOREIGN KEY (SubjectID) REFERENCES Subjects(SubjectID)

	, CONSTRAINT PK_StudentsSubjects PRIMARY KEY (StudentID, SubjectID)
)

CREATE TABLE Payments (
	PaymentID INT PRIMARY KEY
	, PaymentDate DATE
	, PaymentAmount DECIMAL(15, 2)
	, StudentID INT

	, CONSTRAINT FK_PaymentsToStudentsByStudentID FOREIGN KEY (StudentID) REFERENCES Students(StudentID)
)


- PROBLEM 9

SELECT m.MountainRange, p.PeakName, p.Elevation
FROM Mountains AS m
JOIN Peaks AS p
ON m.Id = p.MountainId
WHERE m.MountainRange = 'Rila'
ORDER BY p.Elevation DESC

